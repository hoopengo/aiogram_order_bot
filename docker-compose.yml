services:
  db:
    restart: always
    hostname: db
    build:
      context: .
      dockerfile: ./docker/postgres.Dockerfile
    env_file:
      - ./settings/db.env
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data

  bot:
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    restart: always
    env_file:
      - ./settings/db.env
      - ./settings/bot.env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data/logs:/usr/src/app/bot/logs
      - ./src/alembic/versions:/usr/src/app/alembic/versions

  adminer:
    image: adminer
    restart: always
    env_file:
      - ./settings/db.env
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

networks:
  default:
    driver: bridge
